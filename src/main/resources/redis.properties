
redis.address=g1rdsc01.im.dev.gomeplus.com:7000;g1rdsc02.im.dev.gomeplus.com:7000;g1rdsc03.im.dev.gomeplus.com:7000
#最大连接数
redis.maxTotal = 150

#最大空闲数
redis.maxIdle = 50

#最小空闲数
redis.minIdle = 25

#默认值 false； 设置为 true 时，当回收策略返回false时，则 调用 factory.activateObject()和factory.validateObject()
redis.testWhileIdle = true

#当资源耗尽时，是否阻塞等待获取资源
redis.blockWhenExhausted = true

#资源最小空闲时间，  默认值 1800000，单位 毫秒   在资源回收策略中，会使用到
redis.minEvictableIdleTimeMillis = 60000

#回收资源线程的执行周期，单位毫秒。默认值 -1 ，-1 表示不启用线程回收资源。
redis.timeBetweenEvictionRunsMillis = 30000

#资源回收线程执行一次回收操作，回收资源的数量。默认值 3
redis.numTestsPerEvictionRun = -1

#获取资源等待时间，当 blockWhenExhausted 配置为 true 时，此值有效 -1 代表无时间限制，一直阻塞直到有可用的资源
redis.maxWaitMillis = 5000

#获取连接时，校验是否可用
#redis.testOnBorrow = false

#创建时，是否校验
#redis.testOnCreate = false

#后进先出，如果是true，则是栈形式，如果是false，则是队列形式
#redis.lifo = true

#当从池中获取资源或者将资源还回池中时 是否使用  java.util.concurrent.locks.ReentrantLock.ReentrantLock 的公平锁机制
#redis.fairness = false

#软资源最小空闲时间， 默认值 -1 ，单位 毫秒  在资源回收策略中，会使用到
#redis.softMinEvictableIdleTimeMillis

# 资源回收策略，默认值 org.apache.commons.pool2.impl.DefaultEvictionPolicy
#redis.evictionPolicyClassName

#默认值 false； 设置为 true 时，当将资源返还个资源池时候，验证资源的有效性，调用 factory.validateObject()方法，如果无效，则调用 factory.destroyObject()方法
#redis.testOnReturn

#JMX配置
#redis.jmxEnabled
#redis.jmxNamePrefix
#redis.jmxNameBase
